name: Gold Trading System CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: secret
          MYSQL_DATABASE: gold_trading_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: --health-cmd="redis-cli ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🐘 Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, dom, fileinfo, mysql, redis, swoole, zip, bcmath, gd, exif, pcntl
          coverage: xdebug

      - name: 📦 Cache Composer packages
        id: composer-cache
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: 🔧 Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: 📄 Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: 🔑 Generate key
        run: php artisan key:generate

      - name: 📁 Directory Permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: 🗄️ Run database migrations
        env:
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: gold_trading_test
          DB_USERNAME: root
          DB_PASSWORD: secret
          REDIS_HOST: 127.0.0.1
          REDIS_PORT: 6379
        run: php artisan migrate --force

      - name: 🧪 Execute tests (Unit and Feature tests) via PHPUnit
        env:
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: gold_trading_test
          DB_USERNAME: root
          DB_PASSWORD: secret
          REDIS_HOST: 127.0.0.1
          REDIS_PORT: 6379
        run: php artisan test --coverage-clover=coverage.xml

      - name: 📊 Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella

  docker-test:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🔨 Build Docker images
        run: docker-compose build --no-cache app

      - name: 🚀 Test Docker containers
        run: |
          docker-compose up -d mysql redis
          sleep 20
          docker-compose up -d app
          sleep 30
          # Test app container health
          docker-compose exec -T app php --version
          docker-compose exec -T app composer --version
          # Test database connection
          docker-compose exec -T app php artisan migrate:status || echo "Migration status check"
          # Test Octane/Swoole
          curl -f http://localhost:8000 || echo "Octane server test"
          docker-compose down

      - name: 🧪 Run tests in Docker
        run: |
          docker-compose up -d mysql redis
          sleep 20
          # Run tests inside Docker container
          docker-compose run --rm app php artisan test
          docker-compose down

  code-quality:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🐘 Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, dom, fileinfo, mysql, zip, bcmath, gd, exif, pcntl
          tools: phpstan, php-cs-fixer

      - name: 📦 Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: 🎨 Run PHP CS Fixer (dry-run)
        run: |
          composer require --dev friendsofphp/php-cs-fixer
          ./vendor/bin/php-cs-fixer fix --dry-run --diff --verbose

      - name: 📊 Run PHPStan
        run: |
          composer require --dev phpstan/phpstan
          ./vendor/bin/phpstan analyse --memory-limit=2G

  security:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🐘 Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: 🔒 Security Audit
        run: |
          composer audit

      - name: 🛡️ Check for known vulnerabilities
        run: |
          composer require --dev enlightn/security-checker
          ./vendor/bin/security-checker security:check composer.lock
